@model Books.WebUI.Models.BookIndexViewModel
@using System.Collections.Generic
@using System.Web
@using HelperMethods.Infrastructure

@{
    ViewBag.Title = "Your Book";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page">
    <!-- ==== START MASTHEAD ==== -->
    <header class="masthead" role="banner">
        <p class="logo"><img src="~/images/logo.jpg" /></p>
        <nav role="navigation">
            @if (@Model.HasParent || @Model.HasChildren)
            {
                <ul class="nav-main">
                @if (@Model.HasChildren)
                {
                    <li>
                        @using (Html.BeginForm("Down", "Book", new { }, FormMethod.Get, new { @class = "navbutton" }))
                        {
                            <input class="navbutton, btn, btn-info" type="submit" value="Down" />
                            @Html.Hidden("NodeID", @Model.Node.NodeID)
                        }
                    </li>
                }
                @if (@Model.HasParent)
                {
                    <li>
                        @using (Html.BeginForm("Up", "Book", new { }, FormMethod.Get, new { @class = "navbutton" }))
                        {
                            <input class="navbutton, btn, btn-info" type="submit" value="Up" />
                            @Html.Hidden("NodeID", @Model.Node.NodeID)
                        }
                    </li>
                }
                </ul>
            }
            <ul class="nav-main">
                <li>
                    @using (Html.BeginForm("Edit", "Admin", new { }, FormMethod.Get, new { @class = "navbutton" }))
                    {
                        <input class="navbutton, btn, btn-info" type="submit" value="Edit" />
                        @Html.Hidden("NodeID", @Model.Node.NodeID)
                    }
                </li>
                @if (@Model.Node.TreeLevel > 1)
                {
                    <li>
                        @using (Html.BeginForm("New", "Admin", new { }, FormMethod.Get, new { @class = "navbutton" }))
                        {
                            <input class="navbutton, btn, btn-info" type="submit" value="New" />
                            @Html.Hidden("NodeID", @Model.Node.NodeID)
                        }
                    </li>
                }
                <li>
                    @using (Html.BeginForm("NewChild", "Admin", new { }, FormMethod.Get, new { @class = "navbutton" }))
                    {
                        <input class="navbutton, btn, btn-info" type="submit" value="New Child" />
                        @Html.Hidden("NodeID", @Model.Node.NodeID)
                    }
                </li>
            </ul>
            @if (@Model.HasSummary && @Model.ShowingDetails)
            {
                <ul class="detailssummary">
                    <li>
                        @using (Html.BeginForm("Index", "Book", new { Display = "Summary" }))
                        {
                            <input class="navbutton, btn, btn-info" type="submit" value="Summary" />
                            @Html.Hidden("NodeID", @Model.Node.NodeID)
                        }
                    </li>
                </ul>
            }
            @if (@Model.HasSummary && @Model.ShowingSummary)
            {
                <ul class="detailssummary">
                    <li>
                        @using (Html.BeginForm("Index", "Book", new { Display = "Details" }, FormMethod.Get, new { @class = "navbutton" }))
                        {
                            <input class="navbutton, btn, btn-info" type="submit" value="Details" />
                            @Html.Hidden("NodeID", @Model.Node.NodeID)
                        }
                    </li>
                </ul>
            }
            @if (@Model.Node.TreeLevel > 1)
            {
                <ul class="createformula">
                    <li>
                        @using (Html.BeginForm("Edit", "Formula", new { NodeID = @Model.Node.NodeID }, FormMethod.Get, new { @class = "navbutton" }))
                        { 
                            <input class="navbutton, btn, btn-info" type="submit" value="Create Formula" />
                            @Html.Hidden("NodeID", @Model.Node.NodeID)
                        }
                    </li>
                    <li>
                        @using (Html.BeginForm("Edit", "Summary", new { NodeID = @Model.Node.NodeID }, FormMethod.Get, new { @class = "navbutton" }))
                        {
                            <input class="navbutton, btn, btn-info" type="submit" value="Create Summary" />
                            @Html.Hidden("NodeID", @Model.Node.NodeID)
                        }
                    </li>
                </ul>
            }
            @if (@Model.HasPicture)
            {
                if (!@Model.PictureFixed)
                {
                    <ul class="picturebuttons">
                        @for (int i = 0; i < Model.NoOfPictures; i++)
                        {
                            <li>
                                @using (Html.BeginForm("Index", "Book", new { picturefixed = true, pictureptr = i }))
                                {
                                    <input class="navbutton, btn, btn-info" type="submit" value="@Model.Pictures.ToArray()[i].Title" />
                                @Html.Hidden("NodeID", @Model.Node.NodeID)
                                }
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <ul class="picturebuttons">
                        <li>
                            @using (Html.BeginForm("Index", "Book", new { picturefixed = false, pictureptr = 0 }))
                            {
                                <input class="navbutton, btn, btn-info" type="submit" value="Back" />
                                @Html.Hidden("NodeID", @Model.Node.NodeID)
                            }
                        </li>
                    </ul>
                }
            }
            <div class="search">
                @if (@Model.SearchKey == "")
                {
                    if (@Model.Node.TreeLevel > 1)
                    {
                        using (Html.BeginForm("Index", "Book", new { searchkey = @Model.SearchKey }, FormMethod.Get, new { @class = "navbutton" }))
                        {
                            <label for="searchkey">Search</label>
                            <input type="search" id="searchkey" name="searchkey" value="@Model.SearchKey" />
                            <input type="image" src="../../../images/icons/go.png" />
                            @Html.Hidden("NodeID", @Model.Node.NodeID)
                        }
                    }
                }
                else
                {
                    using (Html.BeginForm("Index", "Book", new { NodeID = Session["SearchReturn"], searchkey = "", picturefixed = false, pictureptr = 0 }))
                    {
                        <label>@Session["SearchMsg"] @Session["SearchKey"]</label>
                        <input class="navbutton, btn, btn-info" type="submit" value="Back" />
                        @Html.Hidden("NodeID", @Model.Node.NodeID)
                    }
                }
            </div>
            <div class="PictureTools">
                @using (Html.BeginForm("NewPicture", "Admin", new { picturetitle = @Model.PictureTitle, picturefile = @Model.PictureFile}, FormMethod.Post, new { @class = "navbutton",  enctype="multipart/form-data" }))
                {
                    <label>Add Picture</label><br/>
                    <label for="PictureTitle">Title:</label><br/>
                    <input type="text" id="PictureTitle" name="PictureTitle" value="@Model.PictureTitle" /><br/>
                    <label for="PictureFile">File:</label>
                    <input type="file" id="PictureFile" name="PictureFile" value="@Model.PictureFile" /><br/>
                    <input type="submit" value="Save" class="btn btn-primary" />
                    @Html.Hidden("NodeID", @Model.Node.NodeID)
                }
            </div>
            <div class="siblings">
                @Html.Action("Menu", "Nav", new { NodeID = @Model.Node.NodeID })
            </div>
        </nav>
    </header>
    <!-- end masthead -->
    @if (!@Model.PictureFixed)
    {
    <div class="container">
        @if (TempData["message"] != null)
        {
            <div class="alert alert-success">@TempData["message"]</div>
        }
        <!-- ==== START MAIN ==== -->
        <main role="main">
            <section class="post">
                <h1>@Model.Node.Heading</h1>
                @Html.Partial("BookContent", @Model)
            </section>
        </main>
        <!-- end main -->
        <!-- end container -->
        <!-- ==== START PAGE FOOTER ==== -->
        <footer role="contentinfo" class="footer">
            <p class="legal"><small>&copy; 2019 Kanangra Code</small></p>
        </footer>
        <!-- end page footer -->
    </div>    
    }
    else
    {
    <!-- Fixed Image -->
    <div class="fixedpicture">
        @Html.Action("Index", "Picture", new { NodeID = @Model.Node.NodeID, pictureptr = @Model.PicturePointer })
    </div>
    <div class="fixedcontainer">
        <!-- ==== START MAIN ==== -->
        <main role="main">
            <section class="post">
                <h1>@Model.Node.Heading</h1>
                @Html.Partial("BookContent", @Model)
            </section>
        </main>
        <!-- end main -->
        <!-- end container -->
        <!-- ==== START PAGE FOOTER ==== -->
        <footer role="contentinfo" class="footer">
            <p class="legal"><small>&copy; 2019 Kanangra Code</small></p>
        </footer>
        <!-- end page footer -->
    </div>            
    }
    <!-- end page -->
</div>
